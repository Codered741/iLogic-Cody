Sub Main()
	PlaceFromContentCenter("Fasteners", "Bolts", "Hex Head", "Hex Bolt - Inch - Grade 8", 2, 4)
	'rewrite to iterate through content families and place all rows from all families
End Sub

Public Sub PlaceFromContentCenter(Node1 as String, Node2 As String, Node3 as String, FamilyName as String, xOffset, yOffset)
    Dim asmDoc As AssemblyDocument = ThisApplication.Documents.Add(kAssemblyDocumentObject)
    
    Dim asmDef As AssemblyComponentDefinition = asmDoc.ComponentDefinition
    
    ' Get the node in the content browser based on the names of the nodes in the hierarchy.
    Dim familyNode As ContentTreeViewNode = ThisApplication.ContentCenter.TreeViewTopNode.ChildNodes.Item(Node1).ChildNodes.Item(Node2).ChildNodes.Item(Node3)
    
    ' Find a specific family.  In this case it's using the display name, but any family
    ' characteristic could be searched for.
    Dim family As ContentFamily
    Dim checkFamily As ContentFamily
    For Each checkFamily In familyNode.Families
        If checkFamily.DisplayName = FamilyName Then
           family = checkFamily
            Exit For
        End If
    Next
    
    Dim i As Integer
    If Not family Is Nothing Then
        ' Place one instance of each member.
        Dim offset As Double
        offset = 1
        Dim row As ContentTableRow
        For Each row In family.TableRows
            ' Create the member (part file) from the table.
            Dim failureReason As MemberManagerErrorsEnum
            Dim failureMessage As String
            Dim memberFilename As String = family.CreateMember(row, failureReason, failureMessage, kRefreshOutOfDateParts)
            
            ' Place the part into the assembly.
            Dim transMatrix As matrix
            transMatrix = ThisApplication.TransientGeometry.CreateMatrix
            transMatrix.Cell(xOffset, uOffset) = offset
            Dim Occ As ComponentOccurrence = asmDef.Occurrences.Add(memberFilename, transMatrix)
            
            ' Compute the position for the next placement based on the size of the part just placed.
            Dim minY As Double
            Dim maxY As Double
            minY = Occ.RangeBox.minPoint.y
            maxY = Occ.RangeBox.maxPoint.y = offset + ((maxY - minY) * 1.1)
        Next
    End If
End Sub
